summary(model)
m<-predict(model, df)
plot(m, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model<-auto.arima(l_ts)
plot(forecast(model, h=10))
library(forecast)
model<-auto.arima(l_ts)
plot(forecast(model, h=20))
library(MLmetrics)
#Mean Absolute Percentage Error
#Regression
MAPE(model1$fitted.values,sales_ts)
#Single Exponential Smoothing
MAPE(hw1$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(hw2$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(hw3$fitted[,1],sales_ts)
#Root Mean Sqaure Error
#Regression
RMSE(model1$fitted.values,sales_ts)
#Single Exponential Smoothing
RMSE(hw1$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(hw2$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(hw3$fitted[,1],sales_ts)
model<-ma(l_ts)
model<-ma(l_ts, order=4)
plot(forecast(model, h=10))
model<-ma(l_ts, order=5)
plot(forecast(model, h=10))
model<-ma(l_ts, order=10)
plot(forecast(model, h=10))
model<-ma(l_ts, order=3)
plot(forecast(model, h=10))
auto.ari
model<-auto.arima(l_ts)
plot(forecast(model, h=10))
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model<-auto.arima(l_ts)
plot(forecast(model, h=10))
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model<-auto.arima(l_ts)
#plot(forecast(model, h=10))
lines(model$fitted[,1], lty=2, col="blue")
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model<-auto.arima(l_ts)
plot(forecast(model, h=10))
lines(forecast(model, h=10), lty=2, col="blue")
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error
#Regression
MAPE(model$fitted.values,sales_ts)
library(MLmetrics)
#Mean Absolute Percentage Error
#Regression
#MAPE(model$fitted.values,sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error
#Regression
#RMSE(model$fitted.values,sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
library(tidyverse)
df <- read_csv('sales.csv')
head(df)
sales <- df$Sales
head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
sales_ts
plot.ts(sales_ts)
salesdecomp = decompose(sales_ts)
plot(salesdecomp)
library(fpp2)
library(forecast)
plot(sales_ts)
hw1 = HoltWinters(sales_ts, beta = FALSE, gamma = FALSE)
lines(hw1$fitted[,1], lty=2, col="blue")
hw2 = HoltWinters(sales_ts, gamma = FALSE)
lines(hw2$fitted[,1], lty=2, col="red")
hw3 = HoltWinters(sales_ts)
lines(hw3$fitted[,1], lty=2, col="green")
model1 = lm(formula = Sales ~  Holiday_Flag+Temperature+Fuel_Price+CPI+Laptop_Demand, data = df )
summary(model1)
plot(x = df$Sales, y = model1$fitted.values, xlab = "True Values", ylab = "Model Fitted Values",
main = "Regression fits of Sales")
abline(b = 1, a = 0)
demand <- df$Laptop_Demand
demand_ts <- ts(demand, frequency = 52)
plot.ts(demand_ts)
hw4 = HoltWinters(demand_ts, beta = FALSE, gamma = FALSE)
lines(hw4$fitted[,1], lty=2, col="red")
hw5 = HoltWinters(demand_ts, gamma = FALSE)
lines(hw5$fitted[,1], lty=2, col="blue")
hw6 = HoltWinters(demand_ts)
lines(hw6$fitted[,1], lty=2, col="green")
ma1 = ma(demand_ts, order = 4)
lines(ma1, col = 'yellow')
plot(forecast(ma1,143))
library(MLmetrics)
#Mean Absolute Percentage Error
#Regression
MAPE(model1$fitted.values,sales_ts)
#Single Exponential Smoothing
MAPE(hw1$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(hw2$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(hw3$fitted[,1],sales_ts)
#Root Mean Sqaure Error
#Regression
RMSE(model1$fitted.values,sales_ts)
#Single Exponential Smoothing
RMSE(hw1$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(hw2$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(hw3$fitted[,1],sales_ts)
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
#Mean Absolute Percentage Error (MAPE)
MAPE(predict(model, df),sales_ts)
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
plot.ts(sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
sales_ts
plot.ts(sales_ts)
df <- read.csv('sales.csv')
head(df)
sales <- df$Sales
head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
sales_ts
plot.ts(sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(m, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(forecast)
model<-auto.arima(l_ts)
plot(forecast(model, h=20))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
plot(df$Sales)
m<-predict(model, df)
m<-predict(model, df)
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(m, type='l')
plot(sales_ts)
single
sales_ts
#single
sales_ts
single$fitted
sales_ts
m<-predict(model, df)
plot(model$fitted.values, type='l')
plot(sales_ts)
m<-predict(model, df)
lines(model$fitted.values, type='l')
m<-predict(model, df)
plot(sales_ts)
lines(model$fitted.values, col='blue')
lines(model$fitted.values, col='blue')
plot(sales_ts)
lines(model$fitted.values, col='blue')
m<-predict(model, df)
plot(sales_ts)
lines(model$fitted.values, lty=2, col="green")
plot(model$fitted.values)
plot(model$fitted.values, type='l')
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(sales_ts)
plot(model$fitted.values, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(sales_ts)
plot(model$fitted.values, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(sales_ts)
plot(model$fitted.values, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(sales_ts)
plot(model$fitted.values, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
df <- read.csv('sales.csv')
#head(df)
sales <- df$Sales
#head(sales)
sales_ts <- ts(sales, frequency = 52, start=c(2010, 2, 5))
#sales_ts
#plot.ts(sales_ts)
d<-decompose(sales_ts)
plot(d)
library(fpp2)
library(tidyverse)
plot(sales_ts)
# Single exponential smoothing
single<-HoltWinters(sales_ts, alpha = NULL, beta = FALSE, gamma = FALSE)
lines(single$fitted[,1], lty=2, col="blue")
# Double exponential smoothing
double<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = FALSE)
lines(double$fitted[,1], lty=2, col="green")
# Triple exponential smoothing
triple<-HoltWinters(sales_ts, alpha = NULL, beta = NULL, gamma = NULL)
lines(triple$fitted[,1], lty=2, col="violet")
model<- lm(df$Sales~(df$Holiday_Flag+df$Fuel_Price+df$Temperature+df$CPI+df$Unemployment+df$Laptop_Demand), data=df)
summary(model)
m<-predict(model, df)
plot(sales_ts)
plot(model$fitted.values, type='l')
library(forecast)
l_ts <- ts(df$Laptop_Demand, frequency = 52, start=c(2010, 2, 5))
plot(l_ts)
model_ld<-auto.arima(l_ts)
plot(forecast(model_ld, h=10))
library(MLmetrics)
#Mean Absolute Percentage Error (MAPE)
#Regression
MAPE(predict(model, df),sales_ts)
#Single Exponential Smoothing
MAPE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
MAPE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
MAPE(triple$fitted[,1],sales_ts)
#Root Mean Sqaure Error (RMSE)
#Regression
RMSE(predict(model, df),sales_ts)
#Single Exponential Smoothing
RMSE(single$fitted[,1],sales_ts)
#Double Exponential Smoothing
RMSE(double$fitted[,1],sales_ts)
#Triple Exponential Smoothing
RMSE(triple$fitted[,1],sales_ts)
